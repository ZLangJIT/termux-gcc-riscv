name: Termux GCC RiscV

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    # manual trigger
  #schedule:
  #  - cron: '0 0 * * *' # https://crontab.guru

defaults:
  run:
    shell: msys2 {0}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: '${{ matrix.icon }} Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          path-type: strict
          
      - name: install git
        run: |
          pacman -Sy
          pacman -S --noconfirm --needed git

      - name: clone qemu_app
        run: |
          git clone https://github.com/mgood7123/qemu_app --depth=1

      - name: check if split program is cached
        run: |
          export MSYS=winsymlinks:native
          cd qemu_app
          chmod +x ./try_get_release.sh
          ./try_get_release.sh   mgood7123   qemu_app   storage--split--windows   split.exe.tar

      - name: unpack alpine
        run: |
          cd qemu_app
          ./unpack.sh
          cd alpine
          ls -l
          chmod -v +x *.sh
          mkdir ../vcxserv

      - name: install qemu
        run: |
          pacman -S --noconfirm --needed pactoys sshpass rsync
          pacboy -S --noconfirm --needed qemu:p qemu-common:p qemu-guest-agent:p qemu-image-util:p

      - name: poweron alpine
        run: |
          cd qemu_app/alpine
          . ./poweron_alpine.sh

      - name: qemu - updrade alpine
        run: |
          cd qemu_app/alpine
          ./exe.sh "sed -i -e 's/v3\.19/v3\.2/g' /etc/apk/repositories"
          ./exe.sh "sudo apk update"
          ./exe.sh "sudo apk upgrade apk-utils"
          ./exe.sh "sudo apk upgrade --available"

      - name: qemu - install nix
        run: |
          cd qemu_app/alpine
          ./exe.sh "sudo apk update"
          ./exe.sh "sudo apk search nix"
          ./exe.sh "sudo apk add nix"

      - name: qemu - reboot
        run: |
          cd qemu_app/alpine
          ./poweroff_alpine.sh
          . poweron_alpine.sh

      - name: qemu - build nix iso
        run: |
          cd qemu_app/alpine
          ./exe.sh "nix-channel --update"
          ./exe.sh "nix-env --install --attr nixpkgs.nix"

      - name: qemu - list files
        run: |
          cd qemu_app/alpine
          ./exe.sh "ls -l"
          ./exe.sh "ls -l out"

      - name: pull packages
        run: |
          cd qemu_app/alpine
          #./pull.sh termux-packages/out

      - name: powerff alpine
        run: |
          cd qemu_app/alpine
          ./poweroff_alpine.sh

      - name: Release package
        uses: softprops/action-gh-release@master
        with:
          name: nixos
          tag_name:  nixos
          body: |
            nixos
          files: |
            out/*
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true
